from typing import List, Tuple

import numpy as np
from numpy.typing import NDArray

# shape typing added in 2.1, not adding it here yet
IntArray = NDArray[np.int32]
FloatArray1D = NDArray[np.float64]
FloatArray2D = NDArray[np.float64]
LongArray1D = NDArray[np.int64]
Uint8Array1D = NDArray[np.uint8]

class NodeSection:
    def __init__(self) -> None: ...
    @property
    def nid(self) -> IntArray: ...
    @property
    def coordinates(self) -> FloatArray2D: ...
    @property
    def tc(self) -> IntArray: ...
    @property
    def rc(self) -> IntArray: ...
    def __len__(self) -> int: ...
    @property
    def fpos(self) -> int: ...

class ElementSection:
    def __init__(self) -> None: ...
    @property
    def eid(self) -> IntArray: ...
    @property
    def pid(self) -> IntArray: ...
    @property
    def node_ids(self) -> IntArray: ...
    @property
    def node_id_offsets(self) -> IntArray: ...
    def __len__(self) -> int: ...
    def to_vtk(self) -> Tuple[LongArray1D, LongArray1D, Uint8Array1D]: ...

class ElementShellSection(ElementSection): ...
class ElementSolidSection(ElementSection): ...

class _Deck:
    def __init__(self, fname: str) -> None: ...
    @property
    def node_sections(self) -> List[NodeSection]: ...
    @property
    def element_solid_sections(self) -> List[ElementSolidSection]: ...
    @property
    def element_shell_sections(self) -> List[ElementShellSection]: ...
    def read_line(self) -> int: ...
    def read_element_solid_section(self) -> None: ...
    def read_element_shell_section(self) -> None: ...
    def read_node_section(self) -> None: ...
    def read(self) -> None: ...

def overwrite_node_section(filename: str, fpos: int, nodes: FloatArray2D) -> None: ...
